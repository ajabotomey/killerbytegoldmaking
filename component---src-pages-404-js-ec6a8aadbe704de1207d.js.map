{"version":3,"sources":["webpack:///./src/components/navLink.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["linkStyles","color","NavLink","children","to","style","Header","siteTitle","margin","maxWidth","padding","class","textDecoration","defaultProps","Layout","data","site","siteMetadata","title","Date","getFullYear","href","SEO","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat","NotFoundPage"],"mappings":"qKAGMA,EAAa,CACfC,MAAO,SASIC,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,GAAb,OACd,kBAAC,OAAD,CAAMA,GAAIA,EAAIC,MAAOL,GAChBG,ICHDG,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,gCACE,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIC,MAAM,SACR,kBAAC,OAAD,CACEP,GAAG,IACHC,MAAO,CACLJ,MAAM,QACNW,eAAe,SAGhBL,IAIL,6BACE,4BAAI,kBAAC,EAAD,CAASH,GAAG,SAAZ,SACJ,4BAAI,kBAAC,EAAD,CAASA,GAAG,WAAZ,WACJ,4BAAI,kBAAC,EAAD,CAASA,GAAG,UAAZ,yBAUZE,EAAOO,aAAe,CACpBN,UAAU,IAGGD,Q,UCMAQ,IApCA,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SACVY,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQR,UAAWQ,EAAKC,KAAKC,aAAaC,QAC1C,yBACEb,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOP,GACP,sCACK,IAAIgB,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,e,2fC3BV,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMP,EAAS,EAATA,MAC9BF,EADuC,OACvCA,KAcFU,EAAkBH,GAAeP,EAAKC,aAAaM,YAEzD,OACE,kBAAC,IAAD,CACEI,eAAgB,CACdH,QAEFN,MAAOA,EACPU,cAAa,QAAUZ,EAAKC,aAAaC,MACzCO,KAAM,CACJ,CACEI,KAAK,cACLC,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASZ,GAEX,CACEa,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASd,EAAKC,aAAae,QAE7B,CACEH,KAAK,gBACLC,QAASZ,GAEX,CACEW,KAAK,sBACLC,QAASJ,IAEXO,OAAOR,KAKfH,EAAIT,aAAe,CACjBW,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,kCCvFf,wDAaeY,UARM,kBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKhB,MAAM,mBACX,yCACA","file":"component---src-pages-404-js-ec6a8aadbe704de1207d.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst linkStyles = {\r\n    color: 'white'\r\n};\r\n\r\nconst NavLink = ({ children, to}) => (\r\n  <Link to={to} style={linkStyles}>\r\n      {children}\r\n  </Link>\r\n);\r\n\r\nexport default NavLink;","import { Link } from \"gatsby\"\r\nimport PropTypes, { node } from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nimport NavLink from \"../components/navLink\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header>\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 class=\"title\">\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n\r\n      <nav> \r\n        <li><NavLink to=\"/blog\">Blog</NavLink></li>\r\n        <li><NavLink to=\"/addons\">Addons</NavLink></li>\r\n        <li><NavLink to=\"/about\">About Killerbyte</NavLink></li>\r\n      </nav>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0 1.0875rem 1.45rem`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n"],"sourceRoot":""}